import { Account } from '../entities/account.entity';
import { Subscription } from '../entities/subscription.entity';
import { Plan } from '../entities/plan.entity';
import { SubscriptionCharge } from './subscription-charge.entity';
import { User } from './user.entity';
export type SaleType = 'subscription' | 'one_time' | 'service';
export type PaymentMethod = 'CREDIT_CARD' | 'BOLETO' | 'PIX';
export type SaleStatus = 'paid' | 'waiting_refund' | 'refunded' | 'chargeback';
export type GatewayProvider = 'PAGARME';
export declare class Sale {
    id: number;
    uuid: string;
    generateUuid(): void;
    user_id: number;
    user: User;
    account_id: number;
    account: Account;
    plan_id: number;
    plan: Plan;
    subscription_id: number;
    subscription: Subscription;
    subscription_charge_id: number;
    subscriptionCharge: SubscriptionCharge;
    transaction_id: string;
    type: SaleType;
    original_amount: number;
    discount: number;
    gateway_fee: number;
    total: number;
    method: PaymentMethod;
    installments: number;
    gateway: GatewayProvider;
    status: SaleStatus;
    paid_at: Date | null;
    failed_reason: string | null;
    refund_solicitation_id: number;
    refund_solicitation_at: Date | null;
    refunded_at: Date | null;
    created_at: Date;
    updated_at: Date;
}
